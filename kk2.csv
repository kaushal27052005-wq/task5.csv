import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Set style for better-looking plots
plt.style.use('default')
sns.set_palette("husl")

# Step 1: Load the CSV file
print("Loading data...")
df = pd.read_csv('sales_data.csv')

# Step 2: Initial Data Exploration
print("\n=== DATA OVERVIEW ===")
print(f"Dataset shape: {df.shape[0]} rows, {df.shape[1]} columns")
print("\nFirst 5 rows:")
print(df.head())

print("\n=== DATA INFORMATION ===")
print(df.info())

print("\n=== STATISTICAL SUMMARY ===")
print(df.describe())

print("\n=== MISSING VALUES ===")
print(df.isnull().sum())

# Step 3: Data Preparation
# Convert Date column to datetime if present
if 'Date' in df.columns:
    df['Date'] = pd.to_datetime(df['Date'])
    df['Month'] = df['Date'].dt.month
    df['Year'] = df['Date'].dt.year

# Calculate total sales (Revenue)
if 'Quantity' in df.columns and 'Price' in df.columns:
    df['Revenue'] = df['Quantity'] * df['Price']
    print("\nRevenue column added to dataset")

# Step 4: Data Analysis with groupby()

# Analysis 1: Total Revenue by Product
print("\n=== REVENUE BY PRODUCT ===")
revenue_by_product = df.groupby('Product')['Revenue'].sum().sort_values(ascending=False)
print(revenue_by_product)

# Analysis 2: Total Quantity Sold by Category
print("\n=== QUANTITY SOLD BY CATEGORY ===")
quantity_by_category = df.groupby('Category')['Quantity'].sum().sort_values(ascending=False)
print(quantity_by_category)

# Analysis 3: Revenue by Region
print("\n=== REVENUE BY REGION ===")
revenue_by_region = df.groupby('Region')['Revenue'].sum().sort_values(ascending=False)
print(revenue_by_region)

# Analysis 4: Average Price by Category
print("\n=== AVERAGE PRICE BY CATEGORY ===")
avg_price_by_category = df.groupby('Category')['Price'].mean()
print(avg_price_by_category)

# Analysis 5: Multiple Aggregations
print("\n=== SUMMARY STATISTICS BY PRODUCT ===")
product_summary = df.groupby('Product').agg({
    'Quantity': 'sum',
    'Revenue': ['sum', 'mean'],
    'Price': 'mean'
}).round(2)
print(product_summary)

# Step 5: Create Visualizations

# Create a figure with multiple subplots
fig, axes = plt.subplots(2, 2, figsize=(15, 12))
fig.suptitle('Sales Data Analysis Dashboard', fontsize=16, fontweight='bold')

# Chart 1: Revenue by Product (Bar Chart)
revenue_by_product.plot(kind='bar', ax=axes[0, 0], color='steelblue')
axes[0, 0].set_title('Total Revenue by Product', fontsize=12, fontweight='bold')
axes[0, 0].set_xlabel('Product')
axes[0, 0].set_ylabel('Revenue')
axes[0, 0].tick_params(axis='x', rotation=45)
axes[0, 0].grid(axis='y', alpha=0.3)

# Chart 2: Quantity by Category (Pie Chart)
quantity_by_category.plot(kind='pie', ax=axes[0, 1], autopct='%1.1f%%', startangle=90)
axes[0, 1].set_title('Quantity Distribution by Category', fontsize=12, fontweight='bold')
axes[0, 1].set_ylabel('')

# Chart 3: Revenue by Region (Horizontal Bar Chart)
revenue_by_region.plot(kind='barh', ax=axes[1, 0], color='coral')
axes[1, 0].set_title('Revenue by Region', fontsize=12, fontweight='bold')
axes[1, 0].set_xlabel('Revenue')
axes[1, 0].set_ylabel('Region')
axes[1, 0].grid(axis='x', alpha=0.3)

# Chart 4: Average Price by Category (Bar Chart)
avg_price_by_category.plot(kind='bar', ax=axes[1, 1], color='mediumseagreen')
axes[1, 1].set_title('Average Price by Category', fontsize=12, fontweight='bold')
axes[1, 1].set_xlabel('Category')
axes[1, 1].set_ylabel('Average Price')
axes[1, 1].tick_params(axis='x', rotation=45)
axes[1, 1].grid(axis='y', alpha=0.3)

plt.tight_layout()
plt.savefig('sales_analysis_dashboard.png', dpi=300, bbox_inches='tight')
print("\nDashboard saved as 'sales_analysis_dashboard.png'")
plt.show()

# Additional Chart: Revenue Trend Over Time (if Date column exists)
if 'Date' in df.columns:
    plt.figure(figsize=(12, 6))
    daily_revenue = df.groupby('Date')['Revenue'].sum()
    daily_revenue.plot(kind='line', marker='o', color='darkblue', linewidth=2)
    plt.title('Daily Revenue Trend', fontsize=14, fontweight='bold')
    plt.xlabel('Date')
    plt.ylabel('Revenue')
    plt.grid(True, alpha=0.3)
    plt.xticks(rotation=45)
    plt.tight_layout()
    plt.savefig('revenue_trend.png', dpi=300, bbox_inches='tight')
    print("Revenue trend chart saved as 'revenue_trend.png'")
    plt.show()

# Step 6: Key Insights Summary
print("\n=== KEY INSIGHTS ===")
print(f"Total Revenue: ${df['Revenue'].sum():,.2f}")
print(f"Total Quantity Sold: {df['Quantity'].sum():,} units")
print(f"Average Transaction Value: ${df['Revenue'].mean():,.2f}")
print(f"Top Selling Product: {revenue_by_product.idxmax()} (${revenue_by_product.max():,.2f})")
print(f"Most Popular Category: {quantity_by_category.idxmax()} ({quantity_by_category.max()} units)")
print(f"Best Performing Region: {revenue_by_region.idxmax()} (${revenue_by_region.max():,.2f})")

# Step 7: Export Results
print("\n=== EXPORTING RESULTS ===")
# Save summary to CSV
revenue_by_product.to_csv('revenue_by_product.csv', header=['Total_Revenue'])
quantity_by_category.to_csv('quantity_by_category.csv', header=['Total_Quantity'])
print("Analysis results exported to CSV files")
print("\nAnalysis Complete!")
