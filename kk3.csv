# Sales Data Analysis using Pandas
# Author: Data Analysis Project
# Description: Comprehensive sales data analysis with visualizations

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
plt.style.use('seaborn-v0_8-darkgrid')
sns.set_palette("husl")

# Step 1: Load the CSV file
print("Loading sales data...")
df = pd.read_csv('sales_data.csv')

# Step 2: Initial Data Exploration
print("\n=== Dataset Overview ===")
print(f"Total Records: {len(df)}")
print(f"Total Columns: {len(df.columns)}")
print("\nFirst 5 rows:")
print(df.head())

print("\n=== Data Information ===")
print(df.info())

print("\n=== Statistical Summary ===")
print(df.describe())

print("\n=== Missing Values ===")
print(df.isnull().sum())

# Step 3: Data Cleaning
# Handle missing values if any
df = df.dropna()

# Convert date column to datetime if exists
if 'Date' in df.columns:
    df['Date'] = pd.to_datetime(df['Date'])
    df['Year'] = df['Date'].dt.year
    df['Month'] = df['Date'].dt.month
    df['Month_Name'] = df['Date'].dt.strftime('%B')

# Step 4: Sales Analysis

# Analysis 1: Total Sales by Product
print("\n=== Total Sales by Product ===")
if 'Product' in df.columns and 'Sales' in df.columns:
    sales_by_product = df.groupby('Product')['Sales'].sum().sort_values(ascending=False)
    print(sales_by_product)
    
    # Visualization
    plt.figure(figsize=(12, 6))
    sales_by_product.plot(kind='bar', color='steelblue')
    plt.title('Total Sales by Product', fontsize=16, fontweight='bold')
    plt.xlabel('Product', fontsize=12)
    plt.ylabel('Total Sales', fontsize=12)
    plt.xticks(rotation=45, ha='right')
    plt.tight_layout()
    plt.savefig('sales_by_product.png', dpi=300, bbox_inches='tight')
    plt.show()

# Analysis 2: Sales by Region
print("\n=== Total Sales by Region ===")
if 'Region' in df.columns and 'Sales' in df.columns:
    sales_by_region = df.groupby('Region')['Sales'].sum().sort_values(ascending=False)
    print(sales_by_region)
    
    # Visualization
    plt.figure(figsize=(10, 6))
    colors = plt.cm.Paired(np.linspace(0, 1, len(sales_by_region)))
    plt.pie(sales_by_region, labels=sales_by_region.index, autopct='%1.1f%%', 
            colors=colors, startangle=90)
    plt.title('Sales Distribution by Region', fontsize=16, fontweight='bold')
    plt.tight_layout()
    plt.savefig('sales_by_region.png', dpi=300, bbox_inches='tight')
    plt.show()

# Analysis 3: Monthly Sales Trend
print("\n=== Monthly Sales Trend ===")
if 'Month' in df.columns and 'Sales' in df.columns:
    monthly_sales = df.groupby('Month')['Sales'].sum().sort_index()
    print(monthly_sales)
    
    # Visualization
    plt.figure(figsize=(12, 6))
    plt.plot(monthly_sales.index, monthly_sales.values, marker='o', 
             linewidth=2, markersize=8, color='darkgreen')
    plt.title('Monthly Sales Trend', fontsize=16, fontweight='bold')
    plt.xlabel('Month', fontsize=12)
    plt.ylabel('Total Sales', fontsize=12)
    plt.grid(True, alpha=0.3)
    plt.tight_layout()
    plt.savefig('monthly_sales_trend.png', dpi=300, bbox_inches='tight')
    plt.show()

# Analysis 4: Sales by Category
print("\n=== Sales by Category ===")
if 'Category' in df.columns and 'Sales' in df.columns:
    sales_by_category = df.groupby('Category')['Sales'].sum().sort_values(ascending=True)
    print(sales_by_category)
    
    # Visualization
    plt.figure(figsize=(10, 6))
    sales_by_category.plot(kind='barh', color='coral')
    plt.title('Total Sales by Category', fontsize=16, fontweight='bold')
    plt.xlabel('Total Sales', fontsize=12)
    plt.ylabel('Category', fontsize=12)
    plt.tight_layout()
    plt.savefig('sales_by_category.png', dpi=300, bbox_inches='tight')
    plt.show()

# Analysis 5: Top 10 Products
print("\n=== Top 10 Products by Sales ===")
if 'Product' in df.columns and 'Sales' in df.columns:
    top_products = df.groupby('Product')['Sales'].sum().nlargest(10)
    print(top_products)
    
    # Visualization
    plt.figure(figsize=(12, 6))
    top_products.plot(kind='bar', color='purple', alpha=0.7)
    plt.title('Top 10 Products by Sales', fontsize=16, fontweight='bold')
    plt.xlabel('Product', fontsize=12)
    plt.ylabel('Sales', fontsize=12)
    plt.xticks(rotation=45, ha='right')
    plt.tight_layout()
    plt.savefig('top_10_products.png', dpi=300, bbox_inches='tight')
    plt.show()

# Analysis 6: Average Order Value
print("\n=== Average Order Value Analysis ===")
if 'Sales' in df.columns and 'Quantity' in df.columns:
    df['Order_Value'] = df['Sales'] / df['Quantity']
    avg_order_value = df['Order_Value'].mean()
    print(f"Average Order Value: ${avg_order_value:.2f}")
    
    # Visualization
    plt.figure(figsize=(10, 6))
    plt.hist(df['Order_Value'], bins=30, color='teal', edgecolor='black', alpha=0.7)
    plt.axvline(avg_order_value, color='red', linestyle='--', 
                linewidth=2, label=f'Mean: ${avg_order_value:.2f}')
    plt.title('Order Value Distribution', fontsize=16, fontweight='bold')
    plt.xlabel('Order Value', fontsize=12)
    plt.ylabel('Frequency', fontsize=12)
    plt.legend()
    plt.tight_layout()
    plt.savefig('order_value_distribution.png', dpi=300, bbox_inches='tight')
    plt.show()

# Analysis 7: Correlation Analysis
print("\n=== Correlation Analysis ===")
numeric_cols = df.select_dtypes(include=[np.number]).columns
if len(numeric_cols) > 1:
    correlation_matrix = df[numeric_cols].corr()
    print(correlation_matrix)
    
    # Visualization
    plt.figure(figsize=(10, 8))
    sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', 
                center=0, square=True, linewidths=1)
    plt.title('Correlation Heatmap', fontsize=16, fontweight='bold')
    plt.tight_layout()
    plt.savefig('correlation_heatmap.png', dpi=300, bbox_inches='tight')
    plt.show()

# Step 5: Key Insights Summary
print("\n=== KEY INSIGHTS ===")
print(f"1. Total Revenue: ${df['Sales'].sum():,.2f}" if 'Sales' in df.columns else "")
print(f"2. Average Sale: ${df['Sales'].mean():,.2f}" if 'Sales' in df.columns else "")
print(f"3. Total Transactions: {len(df)}")
if 'Product' in df.columns and 'Sales' in df.columns:
    best_product = df.groupby('Product')['Sales'].sum().idxmax()
    print(f"4. Best Selling Product: {best_product}")
if 'Region' in df.columns and 'Sales' in df.columns:
    best_region = df.groupby('Region')['Sales'].sum().idxmax()
    print(f"5. Best Performing Region: {best_region}")

print("\n=== Analysis Complete ===")

print("All visualizations have been saved as PNG files.")

