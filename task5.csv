import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# Step 1: Load CSV file
# Replace 'sales_data.csv' with your actual file path
df = pd.read_csv('sales_data.csv')

# Display basic information about the dataset
print("Dataset Shape:", df.shape)
print("\nFirst 5 rows:")
print(df.head())

print("\nDataset Info:")
print(df.info())

print("\nBasic Statistics:")
print(df.describe())

# Step 2: Data Cleaning
# Check for missing values
print("\nMissing Values:")
print(df.isnull().sum())

# Remove duplicates if any
df = df.drop_duplicates()

# Step 3: Data Analysis using groupby()

# Example 1: Total sales by product category
sales_by_category = df.groupby('category')['sales'].sum().sort_values(ascending=False)
print("\nTotal Sales by Category:")
print(sales_by_category)

# Example 2: Total sales by region
sales_by_region = df.groupby('region')['sales'].sum().sort_values(ascending=False)
print("\nTotal Sales by Region:")
print(sales_by_region)

# Example 3: Average sales by product
avg_sales_by_product = df.groupby('product')['sales'].mean().sort_values(ascending=False)
print("\nAverage Sales by Product:")
print(avg_sales_by_product.head(10))

# Example 4: Sales count by month
sales_count_by_month = df.groupby('month')['sales'].count()
print("\nSales Count by Month:")
print(sales_count_by_month)

# Example 5: Multiple aggregations
sales_summary = df.groupby('category').agg({
    'sales': ['sum', 'mean', 'count'],
    'quantity': 'sum'
})
print("\nSales Summary by Category:")
print(sales_summary)

# Step 4: Visualizations

# Chart 1: Bar chart - Total sales by category
plt.figure(figsize=(10, 6))
sales_by_category.plot(kind='bar', color='steelblue')
plt.title('Total Sales by Category')
plt.xlabel('Category')
plt.ylabel('Total Sales')
plt.xticks(rotation=45)
plt.tight_layout()
plt.savefig('sales_by_category.png')
plt.show()

# Chart 2: Horizontal bar chart - Sales by region
plt.figure(figsize=(10, 6))
sales_by_region.plot(kind='barh', color='coral')
plt.title('Total Sales by Region')
plt.xlabel('Total Sales')
plt.ylabel('Region')
plt.tight_layout()
plt.savefig('sales_by_region.png')
plt.show()

# Chart 3: Line chart - Sales trend over time
sales_by_month = df.groupby('month')['sales'].sum()
plt.figure(figsize=(12, 6))
sales_by_month.plot(kind='line', marker='o', color='green', linewidth=2)
plt.title('Sales Trend Over Months')
plt.xlabel('Month')
plt.ylabel('Total Sales')
plt.grid(True, alpha=0.3)
plt.tight_layout()
plt.savefig('sales_trend.png')
plt.show()

# Chart 4: Pie chart - Sales distribution by category
plt.figure(figsize=(8, 8))
sales_by_category.plot(kind='pie', autopct='%1.1f%%', startangle=90)
plt.title('Sales Distribution by Category')
plt.ylabel('')
plt.tight_layout()
plt.savefig('sales_distribution.png')
plt.show()

# Chart 5: Top 10 products by sales
top_products = df.groupby('product')['sales'].sum().sort_values(ascending=False).head(10)
plt.figure(figsize=(12, 6))
top_products.plot(kind='bar', color='purple')
plt.title('Top 10 Products by Sales')
plt.xlabel('Product')
plt.ylabel('Total Sales')
plt.xticks(rotation=45, ha='right')
plt.tight_layout()
plt.savefig('top_products.png')
plt.show()

# Step 5: Additional Insights

# Total revenue
total_revenue = df['sales'].sum()
print(f"\nTotal Revenue: ${total_revenue:,.2f}")

# Average transaction value
avg_transaction = df['sales'].mean()
print(f"Average Transaction Value: ${avg_transaction:,.2f}")

# Total number of transactions
total_transactions = df.shape[0]
print(f"Total Transactions: {total_transactions:,}")

# Best performing category
best_category = sales_by_category.idxmax()
print(f"Best Performing Category: {best_category}")

# Best performing region
best_region = sales_by_region.idxmax()
print(f"Best Performing Region: {best_region}")

# Export results to CSV
sales_by_category.to_csv('sales_by_category_summary.csv')
sales_by_region.to_csv('sales_by_region_summary.csv')
print("\nSummary files exported successfully!")

print("\nAnalysis Complete!")
